[10. 복제 셋 설정]
 10.1 복제 소개
  - 복제 : 데이터의 동일한 복사본을 여러 서버상에서 보관하는 방법이며 실제 서비스를 배포할 때 권한한다.
  - 한대 또는 그 이상의 서버에 이상이 발생하더라도 복제는 애플리케이션이 정상적으로 동작하게 하고 데이터를 완전하게 보존한다.
  - 몽고 DB를 이용하면 복제 셋을 생성함으로써 복제할 수 있다.
  - 복제 셋은 클라이언트 요청을 처리하는 프라이머리 서버 한대와 프라이머리 데이터 복사본을 갖는 세컨더리 서버 여러 대로 이뤄진다.
  - 프라이머리 서버에 장애가 발생하면 세컨더리 서버는 자신들 중에서 새로운 프라이머리 서버를 선출 가능.
 
 10.2 복제 셋 절성 - 1장
  - 단일 장비에 3-노트 복제셋을 설정하는 방법을 보여준다.
  - 몽고 DB가 고가용성과 재해복구를 처리하는 방법을 이해할 수 있다.
  - 복제 셋을 설정하고 실행하기 위해 스크립팅한 후, mongo셸에서 관리 명령을 실행하거나 네트워크 파티션 또는 서버 오류를 시뮬레이션한다.
  - 복원력을 제공하려면 DNS Seedlist d연결 형식을 사용해 애플맄케이션 복제 셋에 연결한느 방법을 지정해야한다.
  
  - 테스트 복제 셋을 시작하기에 앞서 각 노드에 대해 별도의 데이터 디렉터리를 생성
  $mkdir -p ~/data/rs{1,2,3}
  > md c:/data/rs1 c:/data/rs2 c:/data/rs3
  
  그러면 ~/data/rs1, ~/data/rs2, ~/data/rs3 디렉터리가 생성된다.
  
  리눅스나 맥 os에서는 다음 명령을 각 별도의 터미널에서 실행한다.
  $monogod --replSet mdbDefGuide --dbpath ~data/rs1 --port 27017 \ --smaillfiles --oplogSize 200
  $monogod --replSet mdbDefGuide --dbpath ~data/rs2 --port 27017 \ --smaillfiles --oplogSize 200
  $monogod --replSet mdbDefGuide --dbpath ~data/rs3 --port 27017 \ --smaillfiles --oplogSize 200
  
 10.3 네트워크 고려 사항
  - 복제 셋의 모든 멤버는 같은 셋 내 다른 멤버와 연결할 수 잇어야한다.
  - 만약 이미 작동 중인 다른 멤버에 연결할 수 없다는 오류가 발생하면 연결이 이뤄지도록 네트워크 구성을 바꿔야한다.
  - 별도의 서버에서 쉽게 실행할 수 있다.
  - 몽고db 3.6이 출시되면서 mongod 는 기본적인 로컬호스트 127.0.0.1에만 바인딩 한다.
  - 복제 셋의 각 멤버가 다른 멤버와 통신하려면 다른 멤버가 연결할 수 잇는 ip 주소에도 바인딩해야한다.
  
  ex)  ip주소가 198.51.100.1인 네트워크 인터페이스가 있는 서버에서 monogod 인스턴스를 실행중이다.
  인스턴스를 각기 다른 서버의 멤버와 함께 봅제 셋의 멤버로 실행하려면, 명령행 매개변수 --bind_ip를 지정하거나 인스턴스 구성파일에 있는 bind_ip를 사용한다.
  
 10.4 보안 고려 사항.
  - localhost이외의 ip주소에 바인딩하기 전 복제 셋을 구성할 때, 권한 제어를 활성화하고 인증 메커니즘을 지정해야한다
  - 디스크의 데이터를 암호화하고 복제 셋 멤버 간 통신 및 셋과 클라이언트 간 통신을 암호화하면 좋다.
  
 10.5 복제 셋 설정 -2장
 - 지금가지 수행한 작업으로는 아직 각 mongod가 다른 mongod의 존재를 알지 못한다.
 - 네 번째 터미널에서 실행 중인 mongod 인스턴스 중 하나에 연결하는 mongo 셸을 시작한다.
 - 다른 명령을 입력해 수행할 수 있다.
 
 명령은 포트 27017에서 실행 중인 mongod에 연결한다.
 $ mongod --port 27017
 그런 다음 mongo셸에서 구성 도큐먼트를 만들고 rs.initiate()보조자에 전달해 복사 셋을 시작한다.
 >  rsconf = {
  _id : "mdbDefGuide",
  members : [
   {_id:0,host:"localhost:27017"},
   {_id:1,host:"localhost:27018"},
   {_id:2,host:"localhost:27019"}
  ]}
  rs.initate(rsconf)
  
  구성의 _id는 명령행에 전달한 복제 셋의 이름이다.
  도큐먼트의 다음 부분은 셋 멤
