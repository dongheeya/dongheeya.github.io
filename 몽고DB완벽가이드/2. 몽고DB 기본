Chaper2. 몽고 DB 기본

* Collection ~= table
* Document ~= 행
* 모든 Collection내에는 고유한 "_id"를 가진다.

2.1 도큐먼트
 1) 정렬된 키와 연결된 값으로 이뤄짐 (EX. {"greeting" :"Hello, world!", "views" : 3} )
    - 키는 \0 (null문자)를 포함하지 않음
    - .과 $문자는 특정 상황에서만 사용가능 (예약어로 취급)
    - 데이터형과 대소문자를 구별 
      (EX. {"count":5}와  {"count":"5"}는 다름) - 5(정수형) vs "5" (문자)
      (EX. {"count":5}와  {"Count":"5"}는 다름) - count(소문자) vs Count (대문자)
    - 하나의 Collection에 같은 명칭의 Document는 올수 없음
      (EX. {"greeting":"hello!","greeting":"안녕"})

2.2 컬렉션 ~= row
 2.2.1 동적 스키마 : 하나의 컬렉션 내 도큐먼트들은 모두 다른 구조를 가질 수 있다.
   {"greeting" : "hello","views" :3}
   {"signoff" : "Good night, and good luck"}
   
   그럼에도, 여러개의 컬랙션이 필요한 이유는?
   - 개발자와 관리자에게 번거로운 일이 생길수 있음
   - 컬렉션 별로 목록을 뽑으면, 데이터형별로 뽑을때보다 훨씬 빠르다.
   - 같은 종류의 데이터를 하나의 컬렉션에 모아두면 데이터 지역성에도 좋다
   - 인덱스를 만들면 도큐먼트는 특정 구조를 가져야함. 효율적인 인덱싱에 필요.
 2.2.2 네이밍
  - 빈 문자열("")은 사용 불가
  - \0(null 문자) 사용 불가
  - system. 으로 시작하는 컬렉션명은 시스템 컬렉션에서 사용하는 예약어이므로 사용 불가
  - 사용자가 만든 컬렉션은 이름에 예약어인 $ 포함 불가.

2.3 데이터베이스
 admin/local
 - admin 데이터베이스는 인증/권한 부여 역할을 함
 - local은 단일 서버에 대한 데이터 저장
 - 샤딩
