Chapter 6. 스트림으로 데이터 수집

 자바 8의 스티림은 데이터 집합을 멋지게 처리하는 게으른 반복자라고 설명할 수 잇다.
 스트림의 연산은 filter 또는 map같은 중간 연산과 count, findFirst, forEach, reduce 등의 최종 연산으로 구분할 수 있다.
 중간 연산은 한 스트림을 다른 스트림으로 변환하는 연산으로서, 
 여러 연산을 연결할 수 있다.
 
 중간 연산은 스트림 파이프라인을 구성하며, 스트림의 요소를 소비하지 않는다.
 반면에 최종 연산은 스트림의 요소를 소비해서 최종 결과를 도출한다.
 최종 연산은 스트림 파이프라인을 최적화하면서 게산 과정을 짧게 생략하기도 한다.
 
 이 chapter에서는 collet역시 다양한 요소 누적 방식을 인수로 받아서 스트림을 최종 결과로 도출하는 리듀싱 연산을 수행할 수 있음을 설명한다.
 
 6.1 컬렉터란 무엇인가?
  - 함수형 프로그래밍에서는 무엇을 원하는 지 직접 명시할 수 있어서 어떤 방법으로 이를 얻을지는 신경 쓸 필요가 없다.
  - groupingBy를 이용해서 각 키 버킷 그리고 각 키 버킷에 대응하는 요소 리스트를 값으로 표현하는 맵을 만들라.는 동작을 수행한다.
  
  6.1.1 고급 리듀싱 기능을 구행하는 컬렉터.
  
